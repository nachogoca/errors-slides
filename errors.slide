Errors

30 Julio 2021
Nacho Gonz√°lez
(jose.cardenas)

* Que es un error?

Seguramente han leido codigo similar a 

.code code/example1.go

* Muy usual en librerias

[[https://pkg.go.dev/os#Open][os.Open]]
[[https://pkg.go.dev/encoding/json@go1.16.6][encoding/json]

* Try Catch? Exception?

.image images/dont.gif

* Errors are values ‚≠ê

Flexibilidad

Tu defines la importancia de los errores.

Depende del uso de caso y el contexto.

.image images/rakegopher.png

* Tipo de dato

.code code/error-interface.go

.code code/example2.go

* Ejemplo: Hagamos un taco

* 
.code demo/1_ignore_err/main.go /START OMIT/,/END OMIT/

* 
.code demo/2_return_err/main.go /START OMIT/,/END OMIT/

* Don't just check errors, handle them gracefully üå∏

Piensa bien que debes hacer con el error, no solo retornarlo.

Los errores se pueden anotar.

*
.code demo/3_handle_err/main.go /START OMIT/,/END OMIT/

*
.code demo/4_handle_err_const/main.go /START OMIT/,/END OMIT/


* Interface

.code code/error-interface.go

.code code/error-impl.go

* Nuestro propio error
.code demo/5_custom_err/main.go /START OMIT/,/END OMIT/

* Con mas funcionalidad
.code demo/6_http_err/main.go /START OMIT/,/END OMIT/


* Gotcha

.code demo/7_gotcha/main.go

* Tips

* No basar tu codigo en el resultado de err.Error()

* Solo handlear errores una vez


* Mas sobre el tema

[[https://blog.golang.org/error-handling-and-go][https://blog.golang.org/error-handling-and-go]]

[[https://dave.cheney.net/2016/04/27/dont-just-check-errors-handle-them-gracefully][https://dave.cheney.net/2016/04/27/dont-just-check-errors-handle-them-gracefully]]

Go proverbs

[[https://www.youtube.com/watch?v=PAAkCSZUG1c&t=973s][https://www.youtube.com/watch?v=PAAkCSZUG1c&t=973s]]